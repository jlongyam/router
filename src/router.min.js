class Router{constructor(e={}){this.map=e,window.addEventListener("hashchange",async()=>{this._listen}),window.location.hash.length>0&&this._listen}_exec(e,t,s){let l=Object.keys(this.map);for(let h=0;h<l.length;h++)try{if(""+s=="undefined")this.map[e].call();else{let i=":"+s.join("/:");this.map[e+i].apply(null,t)}}catch(n){n.message="\nError:",n.message+="\nPlease check URL writing",n.message+='\nThis message from "_exec"',console.log(n.message)}}_sort(e,t){for(let s=0;s<e.length;s++){let l=e[s].map,h=t.substring(l.length),i=e[s].variable;if(0===h.length)0===i.length&&this._exec(l);else if(i.length>0){let n=h.substring(0,h.length-1).split("/");n.length===i.length&&this._exec(l,n,i)}}}get _filter(){let e=Object.keys(this.map),t=[];for(let s=0;s<e.length;s++){let l=e[s].split(":"),h=l[0],i="/"!=h.substring(h.length-1)?h+"/":h,n=[];for(let a=0;a<l.length;a++){if(l[a]===h)continue;let r=l[a].split("/");r.includes("")&&r.pop(),n.push(r)}t.push({hash:e[s],base:i,variable:n})}return t}get _listen(){let e=decodeURI(window.location.hash),t="/"===e.substring(e.length,e.length-1)?e:e+"/",s=[];for(let l=0;l<this._filter.length;l++){let h=this._filter[l].base;-1!=t.indexOf(h)&&s.push({map:h,variable:this._filter[l].variable})}return this._sort(s,t),{hash:e,normalize:t,match:s}}}